#!/usr/bin/env bash

# Because Git submodule commands cannot operate without a work tree, they must
# be run from within $HOME (assuming this is the root of your dotfiles)
if [[ ! -v XDG_CONFIG_HOME ]]; then
  echo "define environment variable XDG_CONFIG_HOME" >&2
  exit 1
fi
cd "$XDG_CONFIG_HOME" || {
  echo "cd \$XDG_CONFIG_HOME failed" >&2
  exit 1
}

echo "init submodules"
yadm submodule update --init --recursive

# zsh
if [ -f "../.zshenv" ]; then
  echo "remove ~/.zshenv"
  rm ../.zshenv
fi
echo "link ~/.zshenv to \$XDG_CONFIG_HOME/zsh/.zshenv"
ln -s "$XDG_CONFIG_HOME/zsh/.zshenv" "$HOME/.zshenv" # .zshrc must in ~
# remove bg color in catppuccin theme since alacritty bg is transparent
if [ -f "./catppuccin/catppuccin-fzf-macha.sh" ]; then
  echo "remove \$XDG_CONFIG_HOME/catppuccin/catppuccin-fzf-macha.sh"
  rm catppuccin/catppuccin-fzf-macha.sh
fi
echo "generate \$XDG_CONFIG_HOME/catppuccin/catppuccin-fzf-macha.sh from \$XDG_CONFIG_HOME/catppuccin/fzf/themes/catppuccin-fzf-mocha.sh"
sed '2d' catppuccin/fzf/themes/catppuccin-fzf-mocha.sh >catppuccin/catppuccin-fzf-mocha.sh

# go back to original directory
cd - || {
  echo "cd - failed" >&2
  exit 1
}
